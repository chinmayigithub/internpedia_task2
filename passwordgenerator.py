# -*- coding: utf-8 -*-
"""passwordGenerator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10j7YWHzq9lPMyVea7WGFFycaCSg6yDRT
"""

print("Guggilam chinmayi Naga Sai lakshmi")

import secrets
import string
import pyperclip  # For clipboard functionality

def generate_password(length, use_uppercase, use_lowercase, use_digits, use_symbols):
    """Generates a secure random password based on specified parameters."""
    if length < 1:
        raise ValueError("Password length must be at least 1 character.")

    alphabet = ""
    if use_uppercase:
        alphabet += string.ascii_uppercase
    if use_lowercase:
        alphabet += string.ascii_lowercase
    if use_digits:
        alphabet += string.digits
    if use_symbols:
        alphabet += string.punctuation

    if not alphabet:
        raise ValueError("At least one character type must be selected.")

    return ''.join(secrets.choice(alphabet) for _ in range(length))

def display_passwords(passwords):
    """Displays the generated passwords in a user-friendly format."""
    print("\nGenerated Passwords:")
    for i, password in enumerate(passwords, 1):
        print(f"Password {i}: {password}")

def copy_to_clipboard(password):
    """Copies the given password to the clipboard."""
    pyperclip.copy(password)
    print(f"\nPassword copied to clipboard: {password}")

def main():
    """Main function to interact with the user and generate passwords."""
    try:
        length = int(input("Enter the length of the password: "))
        use_uppercase = input("Include uppercase letters? (y/n): ").strip().lower() == 'y'
        use_lowercase = input("Include lowercase letters? (y/n): ").strip().lower() == 'y'
        use_digits = input("Include digits? (y/n): ").strip().lower() == 'y'
        use_symbols = input("Include symbols? (y/n): ").strip().lower() == 'y'
        number_of_passwords = int(input("Enter the number of passwords to generate: "))

        if number_of_passwords < 1:
            raise ValueError("Number of passwords must be at least 1.")

        passwords = [generate_password(length, use_uppercase, use_lowercase, use_digits, use_symbols) for _ in range(number_of_passwords)]
        display_passwords(passwords)

        # Option to copy a password to the clipboard
        copy_index = int(input("\nEnter the number of the password to copy to clipboard (or 0 to skip): "))
        if 1 <= copy_index <= number_of_passwords:
            copy_to_clipboard(passwords[copy_index - 1])
        elif copy_index != 0:
            print("Invalid selection. No password copied.")

    except ValueError as e:
        print(f"Error: {e}")

if __name__ == "__main__":
    main()